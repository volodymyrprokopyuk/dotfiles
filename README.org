* Installation
** Base installation
*** ISO image and bootable USB

#+BEGIN_SRC fish
# Create a bootable USB from an ISO image
sha512sum -c image.iso.sha512sum
sudo fdisk -l
sudo dd bs=4M if=image.iso of=/dev/sdX conv=fsync oflag=direct status=progress
#+END_SRC

*** Initial configuration

#+BEGIN_SRC fish
# Disable login password
sudo groupadd -r autologin
sudo gpasswd -a $USER autologin
# /etc/lightdm/lightdm.conf
[Seat:*]
autologin-user=vlad

# Scale apps on HDPI
# /etc/profile.d/gtk.sh
export GDK_DPI_SCALE=1.33

# Disable wakeup on Logi Bolt
sudo cp ~/.dotfiles/base/logibolt.rules /etc/udev/rules.d
#+END_SRC

*** Install packages

#+BEGIN_SRC fish
# Enable options in /etc/pacman.conf
Color CheckSpace VerbosePkgLists ParallelDownloads = 8
# Disable [multilib]
# Update package repositories
sudo pacman -Syyu
# Update installed packages and remove unused packages
yay --noconfirm -Syu && yay --noconfirm -Sc && yay --noconfirm -Yc

# Install packages
yay -S wezterm fish starship emacs neovim
yay -S aspell aspell-en aspell-es aspell-uk aspell-ru
yay -S hunspell hunspell-en_us hunspell-es_es hunspell-uk hunspell-ru
yay -S ttf-jetbrains-mono-nerd noto-fonts-emoji
yay -S fzf fd ripgrep eza bat git-delta vivid plocate btop go-yq
yay -S zathura zathura-pdf-mupdf zathura-djvu
yay -S go gopls golangci-lint
yay -S bun-bin typescript typescript-language-server
#+END_SRC

*** Install configuration files

#+BEGIN_SRC fish
# Install configuration files
git clone git@github.com:volodymyrprokopyuk/dotfiles.git ~/.dotfiles
cd ~/.dotfiles && ./config --init --all --install
#+END_SRC


*** LTS Linux kernel

- Official kernels
  - =stable= latest features
  - =lts= stability focused
  - =zen= desktop optimizations
  - =hardened= security enhancements
  - =rt= real-time scheduling

#+BEGIN_SRC fish
yay -S linux-lts66 linux-lts66-headers
lsblk -o name,uuid,fstype,mountpoint
sudo touch /boot/loader/entries/arch-lts66.conf
# title Arch Linux LTS 6.6
# linux /vmlinuz-linux-lts66
# initrd /intel-ucode.img (optional)
# initrd /initramfs-linux-lts66.img
# options root=UUID=45d61aea-cda7-4e55-a5f5-32ab4518a6dd rw
bootctl list
# Reboot
uname -r
# /boot/loader/loader.conf
default arch-lts.conf
#+END_SRC

** i3 installation
*** Install i3 packages

#+BEGIN_SRC fish
# Install i3 packages
yay -S xorg-xev i3status-rust i3lock-color maim
#+END_SRC

*** Configure font scaling

#+BEGIN_SRC fish
# Set font scaling DPI (multiple of 96) in ~/.Xresources
Xcursor.theme: Qogir-dark
Xcursor.size: 48
Xft.dpi: 192
#+END_SRC

*** Configure default applications

#+BEGIN_SRC fish
# Query MIME of a file
xdg-mime query filetype file.pdf
# List installed applications
fd -t f -e desktop . /
# Query default application for a file
xdg-mime query default application/pdf
# Set default applications for a file
xdg-mime default org.pwmt.zathura.desktop application/pdf
xdg-mime default org.pwmt.zathura.desktop image/vnd.djvu
xdg-mime default org.gnome.gThumb.desktop image/png
xdg-mime default org.gnome.gThumb.desktop image/jpeg
xdg-mime default org.gnome.gThumb.desktop image/svg+xml
#+END_SRC

* Applications

** i3

| Key              | Function                      |
|------------------+-------------------------------|
| =mod-r=          | Reload i3 config              |
| =mod-S-r=        | Restart i3 config             |
| =mod-z=          | Toggle full screen            |
| =mod-f=          | Toggle floating               |
| =mod-s=          | Toggle sticky                 |
|------------------+-------------------------------|
| =mod-[0-9]=      | Switch to workspace           |
| =mod-tab=        | Last workspace                |
| =mod-S-[0-9]=    | Move application to workspace |
| =mod-hjkl=       | Focus on application          |
| =mod-S-hjkl=     | Shift application             |
|------------------+-------------------------------|
| =mod-return=     | Wezterm terminal              |
| =mod-space=      | Emacs editor                  |
| =mod-w=          | Firefox browser               |
| =mod-x=          | Launch application            |
| =mod-S-q=        | Kill application              |
| =mod-o=          | Open document                 |
| =mod-i=          | Change input language         |
|------------------+-------------------------------|
| =mod-S-rbracket= | Rotate screen right           |
| =mod-S-lbracket= | Rotate screen left            |
| =mod-S-equal=    | Restore screen                |
| =mod-p=          | Print screen                  |
|------------------+-------------------------------|
| =mod-uarrow=     | Increase volume               |
| =mod-darrow=     | Decrease volume               |
| =mod-S-m=        | Mute volume                   |
|------------------+-------------------------------|
| =mod-rarrow=     | Increase mic                  |
| =mod-larrow=     | Decrease mic                  |
| =mod-S-u=        | Mute mic                      |
|------------------+-------------------------------|
| =mod-y=          | Lock screen                   |
| =mod-S-y=        | Log out from i3 session       |
| =mod-S-z=        | Suspend                       |
| =mod-C-bspace=   | Reboot                        |
| =mod-S-C-bspace= | Power off                     |

** Emacs

*** Editor

Movement

| Key        | Function                                    |
|------------+---------------------------------------------|
| =h/l=      | move char left/right                        |
| =j/k=      | move line down/up                           |
| =g j/k=    | move visual line down/up                    |
|------------+---------------------------------------------|
| =w/b=      | move next/prev beg of word                  |
| =e/ge=     | move next/prev end of word                  |
| =W/B/E/gE= | move next/prev beg/end whitespace only word |
|------------+---------------------------------------------|

*** Table

| Key             | Function               |
|-----------------+------------------------|
| =¦ a ¦ b Tab=   | create table           |
| =¦- Tab=        | insert hrule           |
| =Tab/S-Tab=     | next/prev cell + align |
| =Spc m b i r/c= | insert row/column      |
| =Spc m b d r/c= | delete row/column      |
| =M-h/l=         | move column left/right |
| =M-j/k=         | move row down/up       |

** Inkscape

Document

| Key         | Function             |
|-------------+----------------------|
| =C-S-p=     | Inkscape preferences |
| =C-S-d=     | document preferences |
| =C-z/C-S-z= | undo/redo            |
| =C-M-k=     | spellcheck document  |
| =C-S-s=     | safe as PDF          |
| =C-S-e=     | export as PNG        |

Group, clone, duplicate

| Key         | Function                |
|-------------+-------------------------|
| =C-d=       | duplicate selection     |
| =C-g/C-S-g= | group/ungroup selection |
| =M-d=       | clone object            |
| =S-M-d=     | unlink clone            |
| =S-d=       | select clone origin     |

Zoom

| Key           | Function                 |
|---------------+--------------------------|
| =C-wheel/+/-= | zoom in/out              |
| =5=           | fit page                 |
| =6=           | fit width                |
| =4=           | fit drawing              |
| =3=           | fit selection            |
| =1=           | temporary zoom selection |
| =`/S-`=       | prev/next zoom           |

Canvas

| Key                      | Function             |
|--------------------------+----------------------|
| =wheel/S-wheel/C-arrows= | vert/horiz scroll    |
| =Spc-move=               | arbitrary move       |
| =C-S-wheel=              | rotate canvas        |
| =C-5=                    | cycle outline modes  |
| =f=                      | temporary clean view |
| =S-F11=                  | toggle tool bars     |
| =F12=                    | toggle dialogs       |

Guides, grids

| Key          | Function                |
|--------------+-------------------------|
| =%=          | toggle snapping         |
| =#=          | toggle grid             |
| =¦=          | toggle guides           |
| =Ruler-drag= | create guide            |
| =S-drag=     | rotate guide            |
| =C-S-drag=   | rotate guide snap angle |
| =Del=        | delete guide            |

Z-order, layers

| Key    | Function                  |
|--------+---------------------------|
| =Home= | raise selection to top    |
| =PgUp= | raise selection           |
| =PgDw= | lower selection           |
| =End=  | lower selection to bottom |

Fill, stroke

| Key         | Function                   |
|-------------+----------------------------|
| =click=     | fill from palette          |
| =S-click=   | stroke from palette        |
| =M-drag=    | temporary ungesture        |
| =C-drag=    | adjust lightness/intensity |
| =S-drag=    | adjust saturation/shade    |
| =C-c/C-S-v= | copy/paste object style    |

Select =s=

| Key         | Function                    |
|-------------+-----------------------------|
| =Spc=       | temporary switch to select  |
| =click=     | select object               |
| =S-click=   | toggle selection            |
| =C-click=   | select in group             |
| =M-click=   | select under                |
| =drag=      | rubberband selection        |
| =S-drag=    | add to rubberband selection |
| =M-drag=    | touch selection             |
| =S-M-drag=  | add to touch selection      |
| =Tab/S-Tab= | select next/prev object     |
| =S-s=       | cycle scale/rotate/align    |

Move =s=

| Key           | Function                 |
|---------------+--------------------------|
| =drag/arrows= | move selection           |
| =S/M-arrows=  | coarse/fine grained move |
| =S-drag=      | move without snapping    |
| =C-drag=      | horiz/vert move          |

Scale =s=

| Key          | Function                  |
|--------------+---------------------------|
| =C-drag=     | aspect ratio scale        |
| =S-drag/</>= | symmetric scale           |
| =C/M-</>=    | coarse/fine grained scale |

Rotate, flip =s=

| Key      | Function               |
|----------+------------------------|
| =C-drag= | snap angle rotate      |
| =S-drag= | opposite corner rotate |
| =M-[/]=  | fine grained rotate    |
| =h/v=    | horiz/vert flip        |

Text =t=

| Key | Function |
|-----+----------|
|     |          |

Bezier =b=

| Key | Function |
|-----+----------|
|     |          |

Node =n=

| Key   | Function     |
|-------+--------------|
| =S-r= | reverse path |

Rectangle =r=

| Key | Function |
|-----+----------|
|     |          |

Ellipse =e=

| Key | Function |
|-----+----------|
|     |          |

* Commands
** yay

#+BEGIN_SRC fish
# Update a repository database
yay -Sy
# Upgrade a system
yay -Syu
# Show packages to upgrade
yay -Qu

# Clean a package cache
yay -Sc
# Clean unneeded dependencies
yay -Yc

# Search a remote repository database for a package
yay -Ss/i <package>
# Query a local repository database for an installed package
yay -Qs/i <package>
# Show explicitly installed packages
yay -Qe

# Install a package
yay -S <package>
# Remove a package, its configuration, and dependencies
yay -Rsn <package>

# List all files owned by a package
yay -Ql <package>
# Show which package a file belongs to
yay -Qo <file path>
# Show dependency tree of a package
pactree <package>
# Show packages that depend on a package
pactree -r <package>
#+END_SRC

** rclone

#+BEGIN_SRC fish
# configure remote
rclone config
# list remote files/directories
rclone ls/lsl/lsd/tree remote:path
# show remote object size
rclone size remote:path
# show remote quota
rclone about remote:
# generate a public link to a file
rclone link remote:path
# copy files
rclone copy --progress remote:path ~/local
rclone copy --progress ~/local remote:path
# delete files
rclone --dry-run delete remote:path
# operate remote with TUI
rclone ncdu remote:
#+END_SRC

** Docker

Install and configure Docker

#+BEGIN_SRC fish
yay -S docker docker-compose docker-buildx
sudo groupadd docker
sudo usermod -G docker -a $USER
newgrp docker
sudo systemctl enable docker.service
sudo systemctl start docker.service
#+END_SRC

Network management

#+BEGIN_SRC fish
docker network create $net
docker network ls
docker network rm --force $net
docker container run --network $net --network-alias $cnt $img
#+END_SRC

Image management

#+BEGIN_SRC fish
docker buildx build --tag user/image:tag --target stage .
docker image ls --all [image[:tag]]
docker image rm --force $img
# space for images, build cache, local volumes and container writable layers
docker system df
# remove all stopped containers, unused networks, dangling images, unused cache
docker system prune
#+END_SRC

Container management

#+BEGIN_SRC fish
docker container run --name $cnt --hostname $cnt --rm $img \
  [cmd args...] [bash -c 'cmd ...']
docker container run --interactive --tty $img
docker container run --env VAR=val $img
docker container run --detach --publish $hostport:$cntport $img
docker container ls --all
docker container stop $cnt
docker container rm --force $cnt # stop then remove
#+END_SRC

Execute a command inside a container

#+BEGIN_SRC fish
docker container top/stats/logs --follow $cnt
docker container cp hostfile $cnt:/path # even from stopped
docker container exec $cnt ls/cat/rm /path # only on running
docker container exec -it $cnt bash # interactive
#+END_SRC

Volume and mount management

#+BEGIN_SRC fish
docker volume create $vol
docker volume ls
docker volume rm --force $vol
docker container run --volume $vol:/cntpath $img
docker container run --name $cnt --rm \
  --mount type=volume,source=$vol,target=/cntpath,readonly $img
docker container run --name $cnt --rm \
  --mount type=bind,source=(pwd)/hostpath,target=/cntpath,readonly $img
#+END_SRC

Docker compose

#+BEGIN_SRC fish
docker-compose config # validate merged YAML config
docker-compose --file compose.yaml up [--detach]
docker-compose up --build --scale $srv=N # creates new containers
docker-compose ps
docker-compose logs --follow [$srv]
docker-compose start/stop # existing containers
docker-compose down [$srv] # removes containers
#+END_SRC

