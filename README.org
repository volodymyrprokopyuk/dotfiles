* Applications

** Emacs

*** Editor

Movement

| Key        | Function                                    |
|------------+---------------------------------------------|
| =h/l=      | move char left/right                        |
| =j/k=      | move line down/up                           |
| =g j/k=    | move visual line down/up                    |
|------------+---------------------------------------------|
| =w/b=      | move next/prev beg of word                  |
| =e/ge=     | move next/prev end of word                  |
| =W/B/E/gE= | move next/prev beg/end whitespace only word |
|------------+---------------------------------------------|

*** Table

| Key             | Function               |
|-----------------+------------------------|
| =¦ a ¦ b Tab=   | create table           |
| =¦- Tab=        | insert hrule           |
| =Tab/S-Tab=     | next/prev cell + align |
| =Spc m b i r/c= | insert row/column      |
| =Spc m b d r/c= | delete row/column      |
| =M-h/l=         | move column left/right |
| =M-j/k=         | move row down/up       |

** Inkscape

Document

| Key         | Function             |
|-------------+----------------------|
| =C-S-p=     | Inkscape preferences |
| =C-S-d=     | document preferences |
| =C-z/C-S-z= | undo/redo            |
| =C-M-k=     | spellcheck document  |
| =C-S-s=     | safe as PDF          |
| =C-S-e=     | export as PNG        |

Group, clone, duplicate

| Key         | Function                |
|-------------+-------------------------|
| =C-d=       | duplicate selection     |
| =C-g/C-S-g= | group/ungroup selection |
| =M-d=       | clone object            |
| =S-M-d=     | unlink clone            |
| =S-d=       | select clone origin     |

Zoom

| Key           | Function                 |
|---------------+--------------------------|
| =C-wheel/+/-= | zoom in/out              |
| =5=           | fit page                 |
| =6=           | fit width                |
| =4=           | fit drawing              |
| =3=           | fit selection            |
| =1=           | temporary zoom selection |
| =`/S-`=       | prev/next zoom           |

Canvas

| Key                      | Function             |
|--------------------------+----------------------|
| =wheel/S-wheel/C-arrows= | vert/horiz scroll    |
| =Spc-move=               | arbitrary move       |
| =C-S-wheel=              | rotate canvas        |
| =C-5=                    | cycle outline modes  |
| =f=                      | temporary clean view |
| =S-F11=                  | toggle tool bars     |
| =F12=                    | toggle dialogs       |

Guides, grids

| Key          | Function                |
|--------------+-------------------------|
| =%=          | toggle snapping         |
| =#=          | toggle grid             |
| =¦=          | toggle guides           |
| =Ruler-drag= | create guide            |
| =S-drag=     | rotate guide            |
| =C-S-drag=   | rotate guide snap angle |
| =Del=        | delete guide            |

Z-order, layers

| Key    | Function                  |
|--------+---------------------------|
| =Home= | raise selection to top    |
| =PgUp= | raise selection           |
| =PgDw= | lower selection           |
| =End=  | lower selection to bottom |

Fill, stroke

| Key         | Function                   |
|-------------+----------------------------|
| =click=     | fill from palette          |
| =S-click=   | stroke from palette        |
| =M-drag=    | temporary ungesture        |
| =C-drag=    | adjust lightness/intensity |
| =S-drag=    | adjust saturation/shade    |
| =C-c/C-S-v= | copy/paste object style    |

Select =s=

| Key         | Function                    |
|-------------+-----------------------------|
| =Spc=       | temporary switch to select  |
| =click=     | select object               |
| =S-click=   | toggle selection            |
| =C-click=   | select in group             |
| =M-click=   | select under                |
| =drag=      | rubberband selection        |
| =S-drag=    | add to rubberband selection |
| =M-drag=    | touch selection             |
| =S-M-drag=  | add to touch selection      |
| =Tab/S-Tab= | select next/prev object     |
| =S-s=       | cycle scale/rotate/align    |

Move =s=

| Key           | Function                 |
|---------------+--------------------------|
| =drag/arrows= | move selection           |
| =S/M-arrows=  | coarse/fine grained move |
| =S-drag=      | move without snapping    |
| =C-drag=      | horiz/vert move          |

Scale =s=

| Key          | Function                  |
|--------------+---------------------------|
| =C-drag=     | aspect ratio scale        |
| =S-drag/</>= | symmetric scale           |
| =C/M-</>=    | coarse/fine grained scale |

Rotate, flip =s=

| Key      | Function               |
|----------+------------------------|
| =C-drag= | snap angle rotate      |
| =S-drag= | opposite corner rotate |
| =M-[/]=  | fine grained rotate    |
| =h/v=    | horiz/vert flip        |

Text =t=

| Key | Function |
|-----+----------|
|     |          |

Bezier =b=

| Key | Function |
|-----+----------|
|     |          |

Node =n=

| Key   | Function     |
|-------+--------------|
| =S-r= | reverse path |

Rectangle =r=

| Key | Function |
|-----+----------|
|     |          |

Ellipse =e=

| Key | Function |
|-----+----------|
|     |          |


* Environments

** Docker

Install and configure Docker

#+BEGIN_SRC fish
yay -S docker docker-compose
sudo groupadd docker
sudo usermod -G docker -a $USER
newgrp docker
sudo systemctl enable docker.service
sudo systemctl start docker.service
#+END_SRC

Image management

#+BEGIN_SRC fish
docker build <user>/<image>:<version> .
docker images -a
docker rmi <image_id>
docker system prune [-a]
#+END_SRC

Network management

#+BEGIN_SRC fish
docker network create <network>
docker network ls <network>
docker network rm <network>
#+END_SRC

Container management

#+BEGIN_SRC fish
docker run --rm -it [-d] --name <container> --network <network> \
  -e ENV=value \
  --mount type=bind,src=host,dst=container,[readonly] \
  -p host:container \
  <image> <command>
docker ps -a
docker ps -qf "name=^pattern$"
docker rm <container_id>
docker container rm -f (docker container ls -aq)
#+END_SRC

Execute a command inside a container

#+BEGIN_SRC fish
docker exec -it [-u 0] <container_id> ls
docker exec -it <container_id> sh -c 'ls /*'
docker exec -i <container_id> sh -c 'cat container_file' < host_file
#+END_SRC

Docker compose

#+BEGIN_SRC fish
docker-compose -f <compose.yaml> up [-d]
docker-compose ps
docker-compose run <service> <command>
docker-compose stop
docker-compose down <container-name>
#+END_SRC

** rclone

#+BEGIN_SRC fish
# configure remote
rclone config
# list remote files/directories
rclone ls/lsl/lsd remote:path
# copy files
rclone copy remote:path local --progress
# show remote object size
rclone size remote:path
# show remote quota
rclone about remote:
#+END_SRC
